// bower:scss
// endbower

* {
	margin: 0;
}
/*
	Variables 
*/
$font-ptsans: PT Sans Caption, sans-serif;
$font-titillium: Titillium Web, sans-serif;
$font-opensans: Open Sans, sans-serif;
$font-vesper: Vesper Libre, serif;
$footer-height: 100px;
$black: #333333;
$gray: #555555;

/*
	Mixins
*/
@mixin small-text() {
	text-transform: uppercase;
	font-weight: 100;
	display: block;
	color: $gray;
}

@mixin font-size($sizeValue) {
	font-size: ($sizeValue/10) + px;
	font-size: ($sizeValue/10) + rem;
}

@function strip-unit($num) {
 	@return $num / ($num * 0 + 1);
}

/*
	@include rem-fallback(margin, 10, 20, 30, 40);

	margin: 160px 320px 480px 640px;
	margin: 10rem 20rem 30rem 40rem; 
*/
@mixin rem-fallback($property, $values...) {
	$max: length($values);
	$pxValues: '';
	$remValues: '';

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$pxValues: #{$pxValues + $value*16}px;

		@if $i < $max {
				$pxValues: #{$pxValues + " "};
			}
	} 

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$remValues: #{$remValues + $value}rem;

		@if $i < $max {
			$remValues: #{$remValues + " "};
		}
	} 

	#{$property}: $pxValues; 
	#{$property}: $remValues; 
}

.browsehappy {
	margin: 0.2em 0;
	background: #ccc;
	color: #000;
	padding: 0.2em 0;
}

html, body {
	height: 100%;
}

html {
	font-size: 62.5%;
	overflow: auto;
}

body {
	font-family: $font-opensans;
	text-rendering: optimizeLegibility;
	overflow: auto;
	padding: 0 25px;
	background-color: #f7f7f7;
	color: $gray;
}

.wrapper {
	min-height: 100%;
	height: auto !important;
	height: 100%;
	/* Negative indent footer by it's height */
	margin: 0 auto -100px;
}

a {
	text-decoration: none;
	color: $black;
}

a:active {
	// background-color: red;
}

ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

a img {
	border: none;
}

h1 {
	@include font-size(46);
}

h1.title {
	// font-family: $font-opensans;
	margin-bottom: 20px;
}

h2 {
	@include font-size(26);
}

h3 {
	@include font-size(18);
}

p {
	letter-spacing: 0.1px;
	font-weight: 100;
	color: $gray;
	@include font-size(16);
}

.wrapper {
	position: relative;
	overflow: auto;
}

/* Custom page header */
.header {
	// height: 65px;
	padding: 50px 0;
	width: 100%;
	text-align: center;
	// border-bottom: 1px solid $black;

	.nav {
		width: 100%;
		text-align: center;
		
		li {
			display: inline-block;
			margin-right: 15px;

			a {
				@include font-size(12);
				@include small-text();
			}
	
			a:hover {
				color: #c04ce0;
				background-color: rgba(0,0,0,0) !important;
			}

			a:focus {
				background-color: rgba(0, 0, 0, 0);
			}

			a.activeSmall {
				color: #c04ce0;
			}	
		}
		
		li:last-child {
			margin-right: 0;
		}
	}

	
	h1 {
		max-width: 440px;
		margin: 25px auto;

		a {

			img {
				width: 220px;
				height: auto;
			}
		}

		a {
			display: block;
		}
	}
} //End header

#main {
	padding: 40px 0;
	background-color: #fff;
	
	.page {
		
	}


	.page-home {
		position: relative;
		margin: -40px 0;

		img {
			height: auto;
			width: 100%;
			display: block;
		}
	}	

	.page-about {
		
		.profile {
			padding-top: 30px;

			img {
				width: 200px;
				height: auto;
			}
		}

		.short-bio {
			
			p {
				@include font-size(12);	
			}
			
		}
	}
}

/* Custom page footer */
.push, footer {
	height: $footer-height;
}

footer {
	padding: 30px 0;
	position: relative;
	
	li {
		@include font-size(12);
		@include small-text();
	}
}

.list-icon {
	width: 19px;
	height: 19px;
	opacity: 1;
	top: 14px;
}

.list-icon span {
	display: block;
	height: 0;
	padding-bottom: 2px;
	border-top: 2px solid #000;
	transition: border 0.35s;
}

.line1 {
	width: 15px;
}

.line2 {
	width: 19px;
}

.line3 {
	width: 13px;
}

/* Responsive: Portrait tablets and up */
@media screen and (max-width: 500px) {
	.header {
		.nav {
			li {
				margin-right: 0;
			}
		}
	}
}

@media screen and (max-width: 800px) {
	.page-about {
		.row {
			.pull-left {
				width: 100%;
			}
			.pull-right {
				width: 100%;
				text-align: center;
			}
		}
	}
}

.ng-enter {
	animation: moveFromRightFade 0.7s ease both;
	z-index: 8888;
}

/**
 *  Page transition
 */
@-webkit-keyframes moveToRightFade {
	from { }
	to { opacity: 0.3; -webkit-transform: translateX(100%); }
}
@keyframes moveToRightFade {
	from { }
	to { opacity: 0.3; -webkit-transform: translateX(100%); transform: translateX(100%); }
}

@-webkit-keyframes moveFromRightFade {
	from { opacity: 0.3; -webkit-transform: translateX(100%); }
}
@keyframes moveFromRightFade {
	from { opacity: 0.3; -webkit-transform: translateX(100%); transform: translateX(100%); }
}







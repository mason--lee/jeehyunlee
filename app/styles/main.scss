// bower:scss
// endbower

* {
	margin: 0;
}

button:focus {outline:0;}
/*
	Variables 
*/
$font-raleway: 'univers_ce_45_lightregular', Helvetica, Arial;
// $footer-height: 100px;
$black: #333333;
$gray: #555555;
$light-gray: #ababab;
$purple: #ff82ec;

@font-face {
	font-family: 'icomoon';
	src:url('../fonts/icomoon.eot?3whloo');
	src:url('../fonts/icomoon.eot?#iefix3whloo') format('embedded-opentype'),
		url('../fonts/icomoon.woff?3whloo') format('woff'),
		url('../fonts/icomoon.ttf?3whloo') format('truetype'),
		url('../fonts/icomoon.svg?3whloo#icomoon') format('svg');
	font-weight: normal;
	font-style: normal;
}

[class^="icon-"], [class*=" icon-"] {
	font-family: 'icomoon';
	speak: none;
	font-style: normal;
	font-weight: 400;
	font-variant: normal;
	text-transform: none;
	font-size: 20px;
	line-height: 1;
	color: $black;

	/* Better Font Rendering =========== */
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}

.icon-menu:before {
	content: "\e600";
}
.icon-close:before {
	content: "\e601";
}

$button-size : 2rem; 
$transition: .3s; // increase this to see the transformations in slow-motion
$color: #202020;

.lines-button {
	display: inline-block;
	transition: .3s;
	cursor: pointer;
	user-select: none;
	border-radius: $button-size/7;
	background: none;
	border: none;
	z-index: 99999999;
	
	&:hover {
		opacity: 1;
	}

	&:active {
		transition: 0;
		background: rgba(0,0,0,.1);
	}
}

@mixin line {
	display: inline-block;
	width: $button-size;
	height: $button-size/7;
	background: $color;
	border-radius: $button-size/14; 
	transition: $transition;
}

.lines {   
	//create middle line
	@include line;
	position: relative; 

	/*create the upper and lower lines as pseudo-elements of the middle line*/
	&:before, &:after {
		@include line;
		position: absolute;
		left: 0;
		content: '';
		transform-origin: $button-size/14 center;
	}
	
	&:before { top: $button-size/4; }
	&:after { top: -$button-size/4; }
}

.lines-button:hover {
	opacity: 1;

	.lines {
		&:before { top: $button-size/3.5; }
		&:after { top: -$button-size/3.5; }
	}
}

.lines-button.x.close-toggle .lines{
	/*hide the middle line*/
	background: transparent;

	/*overlay the lines by setting both their top values to 0*/
	&:before, &:after{
		transform-origin: 50% 50%;
		top:0;
		width: $button-size;
	}

	// rotate the lines to form the x shape
	&:before{
		transform: rotate3d(0,0,1,45deg); 
	}

	&:after{
		transform: rotate3d(0,0,1,-45deg); 
	}
}

.lines-button.x.close-toggle .lines{
 
    /*hide the middle line*/
    background: transparent;
 
    /*overlay the lines by setting both their top values to 0*/
    &:before, &:after{
      transform-origin: 50% 50%;
      top:0;
      width: $button-size;
    }
 
    // rotate the lines to form the x shape
    &:before{
      transform: rotate3d(0,0,1,45deg); 
    }
    &:after{
      transform: rotate3d(0,0,1,-45deg); 
    }
}

.lines-button:hover {
	opacity: 1;
	.lines {
		&:before { top: $button-size/3.5; }
		&:after { top: -$button-size/3.5; }
	}
}

/*
	Mixins
*/
@mixin small-text() {
	font-weight: 400;
	display: block;
	color: $gray;
}

@mixin font-size($sizeValue) {
	font-size: ($sizeValue/10) + px;
	font-size: ($sizeValue/10) + rem;
}

@function strip-unit($num) {
 	@return $num / ($num * 0 + 1);
}

/*
	@include rem-fallback(margin, 10, 20, 30, 40);

	margin: 160px 320px 480px 640px;
	margin: 10rem 20rem 30rem 40rem; 
*/
@mixin rem-fallback($property, $values...) {
	$max: length($values);
	$pxValues: '';
	$remValues: '';

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$pxValues: #{$pxValues + $value*16}px;

		@if $i < $max {
				$pxValues: #{$pxValues + " "};
			}
	} 

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$remValues: #{$remValues + $value}rem;

		@if $i < $max {
			$remValues: #{$remValues + " "};
		}
	} 

	#{$property}: $pxValues; 
	#{$property}: $remValues; 
}

.browsehappy {
	margin: 0.2em 0;
	background: #ccc;
	color: #000;
	padding: 0.2em 0;
}

html, body {
	height: 100%;
}

html {
	font-size: 62.5%;
	overflow: auto;
}

body {
	font-family: $font-raleway;
	text-rendering: optimizeLegibility;
	overflow: hidden;
	color: $light-gray;
}

a {
	text-decoration: none;
	color: $black;
}

ul {
	list-style: none;
	margin: 0;
	padding: 0;
}

a img {
	border: none;
}

h1, h2, h3, h4, h5 {
	color: $gray;
	margin-top: 0;
}

h1 {
	@include font-size(46);
}

h2 {
	@include font-size(26);
}

h3 {
	@include font-size(18);
}

p {
	letter-spacing: 0.3px;
	font-weight: 300;
	@include font-size(15);
	line-height: 1.6;
}

#sticky {
	margin-left: 6%;
	position: fixed;
	top: 200px;
}

.container-fluid {
	width: 980px;
	padding: 0;
}

.wrapper {
	min-height: 100%;
	height: auto !important;
	height: 100%;
	position: relative;
	overflow: hidden;

	/* Negative indent footer by it's height */
	// margin: 0 auto -$footer-height;

	.sidebar {
		background-color: $purple;
		
		nav {
			width: 100%;
			padding-left: 30px;
			margin-top: 65px;

			li {

				a {
					@include font-size(12);
					@include small-text();
					padding: 5px 0;
					color: #fff;
				}
		
				a:hover {
					text-decoration: underline;
					background-color: rgba(0,0,0,0) !important;
				}

				a:focus {
					background-color: rgba(0, 0, 0, 0);
				}

				a.activeSmall {
					color: #c04ce0;
				}	
			}
			
			li:last-child {
				margin-right: 0;
			}
		}

		footer {
			padding-left: 30px;
			margin-top: 50px;
			color: #fff;
			h3 {
				color: #fff;
				font-weight: 900;
			}

			ul {
				padding-top: 0.5em;
				li {
					margin-bottom: 0.1em;
				}
			}
		}
	}
	
	/**
	 *  Main content wrapper
	 */
	#main {
		padding: 100px 0;
		background-color: #fff;

		.page-home {

			img {
				height: auto;
				width: 100%;
				display: block;
			}
		}	

		.page-about {
			
			.main-page {
				
				.row {
					margin-bottom: 65px;
				}
			}

			.pull-left {   
				h1 {
					margin-top: 0;			
				}
			}
			
			.profile {
				// width: 150px;
				// height: 150px;
				// border: 3px solid #f1f1f1;
				// border-radius: 1000px;
				// margin: 0 auto;
				// overflow: hidden;
				
				.profile-wrapper {
					width: 80%;
					margin: 0 auto;

					img {
						width: 100%;
						height: auto;
						margin-left: 12px;
					}
				}
				
			}

			.short-bio {
				
				p {
					@include font-size(12);	
				}
				
			}
		}

		.page-project{
			
			h2 {
				margin-left: 30px;
			}

			.collection {
				li {
					padding: 30px;
					a {
						img {
							// width: 100%;
						}
					}
				}
			}	
		}

		
	} 
}

/* Custom page footer */
.push, .main-footer {
	// height: $footer-height;
	clear: both;
}

.main-footer {
	
	position: relative;
	z-index: 99;
	background-color: #fff;
	padding: 2em 0;
	
	.pull-right {
		text-align: right;
		padding: 0;
	}

	.pull-left {
		padding: 0;
	}

	li {
		@include font-size(12);
		@include small-text();
		color: $light-gray !important;
		
		a {
			color: $light-gray !important;
		}
		span {

		}
	}
}


/* Responsive: Portrait tablets and up */
@media screen and (max-width: 1210px) {
	#sticky {
		top: 9%;
		margin-left: 5%;
	}
}

@media screen and (max-width: 980px) {
	.container-fluid {
		width: 100%;
		padding: 0 15px;
	}

	.page {
		padding: 0 25px;
	}

	p {
		text-align: left;
	}
}

@media screen and (max-width: 500px) {
	.header {
		.nav {
			li {
				margin-right: 0;
			}
		}
	}
}

@media screen and (max-width: 800px) {
	.page-about {
		.pull-left {
			width: 100%;
		}
		.pull-right {
			width: 100%;
			text-align: center;
			padding-top: 5em;

			.profile-wrapper {
				width: 60%;
			}
		}
	}
}

.ng-enter {
	animation: moveFromRightFade 0.7s ease both;
	z-index: 8888;
}

/**
 *  Page transition
 */
@-webkit-keyframes moveToRightFade {
	from { }
	to { opacity: 0.3; -webkit-transform: translateX(100%); }
}
@keyframes moveToRightFade {
	from { }
	to { opacity: 0.3; -webkit-transform: translateX(100%); transform: translateX(100%); }
}

@-webkit-keyframes moveFromRightFade {
	from { opacity: 0.3; -webkit-transform: translateX(100%); }
}
@keyframes moveFromRightFade {
	from { opacity: 0.3; -webkit-transform: translateX(100%); transform: translateX(100%); }
}


.sidebar {
	-webkit-animation-duration: 2s;
	-moz-animation-duration: 2s;
	animation-duration: 2s;
	-webkit-animation-delay: 0.2s;
	-moz-animation-delay: 0.2s;
	animation-delay: 0.2s;
}

.spinner-wrapper{
	width: 100%;
	height: 100vh;
	position: absolute;
	z-index: 9999999;
	background-color: #ff82ec;
	padding: auto auto;
}

.spinner {
	margin: 100px auto;
	width: 50px;
	height: 30px;
	text-align: center;
	font-size: 10px;
}

.spinner > div {
	background-color: #333;
	height: 100%;
	width: 6px;
	display: inline-block;

	-webkit-animation: stretchdelay 1.2s infinite ease-in-out;
	animation: stretchdelay 1.2s infinite ease-in-out;
}

.spinner .rect2 {
	-webkit-animation-delay: -1.1s;
	animation-delay: -1.1s;
}

.spinner .rect3 {
	-webkit-animation-delay: -1.0s;
	animation-delay: -1.0s;
}

.spinner .rect4 {
	-webkit-animation-delay: -0.9s;
	animation-delay: -0.9s;
}

.spinner .rect5 {
	-webkit-animation-delay: -0.8s;
	animation-delay: -0.8s;
}

@-webkit-keyframes stretchdelay {
	0%, 40%, 100% { -webkit-transform: scaleY(0.4) }  
	20% { -webkit-transform: scaleY(1.0) }
}

@keyframes stretchdelay {
	0%, 40%, 100% { 
		transform: scaleY(0.4);
		-webkit-transform: scaleY(0.4);
	} 
	20% {
		transform: scaleY(1.0);
		-webkit-transform: scaleY(1.0);
	}
}






